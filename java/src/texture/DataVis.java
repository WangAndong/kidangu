package texture;

import java.awt.*;
import java.util.*;

import javax.swing.*;

import classify.*;

import april.jmat.*;
import april.vis.*;

import magic.vis.chart.*;

public class DataVis
{
    static double[][] road = new double[][] {
            { 0.0221, 1.8139, 0.3887 },
            { 0.0622, 1.3428, 0.2813 },
            { 0.0463, 1.4788, 0.2305 },
            { 0.0876, 1.1665, 0.1777 },
            { 0.0394, 1.5681, 0.2500 },
            { 0.0491, 1.4784, 0.2383 },
            { 0.0200, 1.8690, 0.4902 },
            { 0.0424, 1.6424, 0.4375 },
            { 0.0511, 1.4106, 0.2852 },
            { 0.0378, 1.5698, 0.2266 },
            { 0.0573, 1.3247, 0.2520 },
            { 0.0406, 1.5406, 0.3145 },
            { 0.0371, 1.6645, 0.6602 },
            { 0.0062, 2.5359, 1.5547 },
            { 0.0226, 1.9336, 0.8184 },
            { 0.0408, 1.5433, 0.3906 },
            { 0.0402, 1.5221, 0.2715 },
            { 0.0432, 1.5055, 0.3359 },
            { 0.0659, 1.2525, 0.2070 },
            { 0.0133, 2.1024, 0.6309 },
            { 0.0201, 1.9563, 0.5449 },
            { 0.0529, 1.3976, 0.3242 },
            { 0.0309, 1.6599, 0.7031 },
            { 0.0404, 1.5445, 0.4102 },
            { 0.0502, 1.4533, 0.2734 },
            { 0.0184, 1.9599, 0.5859 },
            { 0.0152, 2.0965, 0.9883 },
            { 0.0263, 1.8082, 0.4805 },
            { 0.0358, 1.6312, 0.3633 },
            { 0.0620, 1.3319, 0.1387 },
            { 0.0200, 2.0665, 0.4609 },
            { 0.2104, 0.6603, 0.0410 },
            { 0.1053, 0.9553, 0.1230 },
            { 0.1081, 0.9628, 0.1191 },
            { 0.0586, 1.5621, 3.6445 },
            { 0.1056, 1.0371, 0.1602 },
            { 0.0502, 1.4703, 0.1953 },
            { 0.0572, 1.3431, 0.1484 },
            { 0.0317, 1.8678, 1.1738 },
            { 0.0632, 1.3328, 0.1094 },
            { 0.0927, 1.1282, 0.1250 },
            { 0.0551, 1.6015, 2.9492 },
            { 0.1006, 1.0843, 0.2539 },
            { 0.0833, 1.1223, 0.1387 },
            { 0.0577, 1.3744, 0.1855 },
            { 0.0282, 1.9617, 1.1348 },
            { 0.1044, 0.9602, 0.0977 },
            { 0.0473, 1.5221, 0.3379 },
            { 0.0254, 1.7895, 0.4844 },
            { 0.1091, 0.9498, 0.1465 },
            { 0.0837, 1.1319, 0.1074 },
            { 0.0213, 1.9917, 0.8340 },
            { 0.0620, 1.2783, 0.2656 },
            { 0.0465, 1.5412, 0.3594 },
            { 0.0507, 1.4266, 0.3086 },
            { 0.0564, 1.3270, 0.2344 },
            { 0.0550, 1.4365, 0.3652 },
            { 0.0350, 1.5933, 0.4863 },
            { 0.0133, 2.2390, 0.9746 },
            { 0.0352, 1.6935, 0.6152 },
            { 0.0581, 1.3597, 0.2754 },
            { 0.0570, 1.3571, 0.3242 },
    };

    static double[][] other = new double[][] {
            {0.0040, 2.7243, 4.4434},
            {0.0100, 2.3225, 2.0332},
            {0.0079, 2.4742, 2.6797},
            {0.0081, 2.3722, 1.7578},
            {0.0043, 2.7227, 4.5547},
            {0.0026, 2.9397, 5.9473},
            {0.0033, 2.8444, 5.6641},
            {0.0029, 2.9412, 5.8066},
            {0.0025, 2.9877, 8.2305},
            {0.0034, 2.8403, 6.1543},
            {0.0045, 2.7158, 5.0332},
            {0.0057, 2.5358, 3.4570},
            {0.0032, 2.8601, 6.4258},
            {0.0022, 3.0144, 8.0352},
            {0.0030, 2.9172, 6.9629},
            {0.0035, 2.8073, 5.2930},
            {0.0069, 2.4555, 2.4297},
            {0.0035, 2.8143, 4.4043},
            {0.0031, 2.8668, 4.7441},
            {0.0067, 2.5049, 2.9453},
            {0.0070, 2.4622, 2.5078},
            {0.0073, 2.4734, 2.1973},
            {0.0079, 2.3872, 1.8809},
            {0.0066, 2.4730, 2.5391},
            {0.0091, 2.3296, 1.5859},
            {0.0126, 2.1805, 1.6230},
            {0.0228, 1.8777, 0.6484},
            {0.0196, 1.9514, 0.4883},
            {0.0157, 2.0100, 0.4629},
            {0.0242, 1.8301, 0.5918},
            {0.0067, 2.4889, 2.0859},
            {0.0035, 2.8022, 4.0996},
            {0.0077, 2.4832, 2.4043},
            {0.0048, 2.6559, 3.5684},
            {0.0036, 2.7718, 4.2520},
            {0.0046, 2.6502, 3.7480},
            {0.0087, 2.3739, 2.2676},
            {0.0030, 2.8776, 5.1191},
            {0.0059, 2.5666, 2.5000},
            {0.0093, 2.3363, 1.7422},
            {0.0066, 2.4964, 2.2070},
            {0.0058, 2.6907, 6.3184},
            {0.0022, 3.0268, 8.1133},
            {0.0030, 2.8917, 7.4531},
            {0.0062, 2.5452, 2.5879},
            {0.0077, 2.4763, 1.6797},
            {0.0029, 2.9473, 5.1973},
            {0.0029, 2.8951, 4.7051},
            {0.0055, 2.6184, 3.1191},
            {0.0035, 2.8056, 4.1289},
            {0.0075, 2.4472, 2.1758},
            {0.0046, 2.6763, 3.2617},
            {0.0039, 2.7395, 5.4414},
            {0.0105, 2.4250, 2.0488},
            {0.0153, 2.0813, 1.0566},
            {0.0041, 2.7270, 4.7793},
            {0.0089, 2.3095, 1.6641},
            {0.0075, 2.4257, 2.2500},
            {0.0052, 2.6013, 3.5098},
            {0.0045, 2.7349, 3.9824},
            {0.0129, 2.2141, 1.6289},
            {0.0045, 2.7568, 4.3867},
            {0.0043, 2.7454, 5.7461},
            {0.0046, 2.6942, 4.1094},
            {0.0051, 2.6209, 3.2773},
            {0.0074, 2.4700, 2.3574},
            {0.0099, 2.2911, 1.0527},
            {0.0277, 1.7650, 0.4746},
            {0.0354, 1.6141, 0.3750},
            {0.0270, 1.8246, 0.7891},
            {0.0021, 3.0471, 7.5723},
            {0.0047, 2.7039, 3.8418},
            {0.0042, 2.6804, 4.3203},
            {0.0082, 2.4578, 2.2891},
            {0.0037, 2.8001, 4.3066},
            {0.0062, 2.5171, 2.4785},
            {0.0090, 2.3811, 2.0332},
            {0.0087, 2.3522, 1.9570},
            {0.0059, 2.5388, 2.8789},
            {0.0066, 2.4972, 2.1289},
            {0.0300, 1.7636, 0.4219},
            {0.0045, 2.6778, 4.4238},
            {0.0056, 2.5993, 2.0039},
            {0.0042, 2.7101, 4.4336},
            {0.0091, 2.3172, 2.0859},
            {0.0054, 2.6242, 2.2441},
            {0.0131, 2.2067, 2.8008},
            {0.1552, 0.8715, 0.0801},
    };

    public static void main(String[] args)
    {
        JFrame jf = new JFrame();
        jf.setLayout(new BorderLayout());

        VisCanvas vc = new VisCanvas(new VisWorld());
        vc.setBackground(Color.black);
        jf.add(vc, BorderLayout.CENTER);

        ArrayList<double[]> roadList = new ArrayList<double[]>();
        for (double[] d : road)
            roadList.add(LinAlg.copy(d, 2));

        ArrayList<double[]> otherList = new ArrayList<double[]>();
        for (double[] d : other)
            otherList.add(LinAlg.copy(d, 2));


        VisData v0 = new VisData(otherList, new VisDataPointStyle(Color.green, 5));
        VisData v1 = new VisData(roadList, new VisDataPointStyle(Color.red, 5));

        LogisticRegressionClassifier lrc = LogisticRegressionClassifier.train(otherList, roadList, 1e-2);
        LinAlg.printTranspose(lrc.getFeatureWeights());

        VisPlot plot = new VisPlot();
        plot.setYAxis(ChartAxis.makeYAxis(0, 4, 2));
        plot.setXAxis(ChartAxis.makeXAxis(0, 0.3, 0.005));
        plot.addData(new XYDataSeries(roadList, new VisDataPointStyle(Color.green, 3)));
        plot.addData(new XYDataSeries(otherList, new VisDataPointStyle(Color.red, 3)));

        final VisWorld.Buffer vb = vc.getWorld().getBuffer("content");
        vb.addBuffered(new VisChain(LinAlg.scale(10, 0.1, 1), plot));
        vb.switchBuffer();

        jf.setSize(800, 800);
        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jf.setVisible(true);
    }

    static VisObject getPlane(double[] w)
    {
        VisData vd = new VisData(new VisDataPointStyle(Color.cyan, 1));

        for (double x = -10; x<10; x+=0.1) {
            for (double y = -10; y<10; y+=0.1) {
                double[] v = new double[] {x,y,1};
                double z = 1.0 / (1.0 + Math.exp(-LinAlg.dotProduct(v, w)));
                vd.add(new double[] {x, y, z});
            }
        }

        return vd;
    }
}
